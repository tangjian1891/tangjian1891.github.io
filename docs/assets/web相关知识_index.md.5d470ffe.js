import{_ as t,c as l,o as s,a as e,d as a}from"./app.1a7b8d50.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"术语描述","slug":"术语描述","link":"#术语描述","children":[]}],"relativePath":"web相关知识/index.md"}'),n={name:"web相关知识/index.md"},o=e("h2",{id:"术语描述",tabindex:"-1"},[a("术语描述 "),e("a",{class:"header-anchor",href:"#术语描述","aria-hidden":"true"},"#")],-1),c=e("ol",null,[e("li",null,[a("命名规则: "),e("ol",null,[e("li",null,"PascalCase(帕斯卡，大驼峰):所有字母都大写，单词之间没有连接符。常用位置:js构造函数命名，class 变量命名，"),e("li",null,"camelCase(驼峰，小驼峰):第一个单子首字母小写，后面每个单词首字母大写，单子之间没有连接符。 常用位置:方法命名，变量命名。"),e("li",null,"kebab-case(短横线):单词小写，使用短横线连接。 如果是html属性转换到js变量，kebab-case会转为小驼峰，比如vue的props传递，只有横杠处才转换。")])]),e("li",null,"html超文本标记语言命名 HTML标签里的元素名不区分大小写,实际渲染时，全部为Lower小写。所以对于最终渲染的input元素,<input>,<Input>,<INPUT>都是可以正常解析的。 遵循Web Components，所以标签中出现多个单词时，必须采用kebab-case短横线命名。")],-1),i=[o,c];function r(d,u,p,_,h,m){return s(),l("div",null,i)}const x=t(n,[["render",r]]);export{f as __pageData,x as default};
