import{_ as s,c as a,o as n,b as l}from"./app.1a7b8d50.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"解压文件","slug":"解压文件","link":"#解压文件","children":[]},{"level":2,"title":"环境变量","slug":"环境变量","link":"#环境变量","children":[]},{"level":2,"title":"查找目录","slug":"查找目录","link":"#查找目录","children":[]},{"level":2,"title":"软件加压编译安装","slug":"软件加压编译安装","link":"#软件加压编译安装","children":[]}],"relativePath":"web相关知识/linux.md"}'),p={name:"web相关知识/linux.md"},e=l(`<h2 id="解压文件" tabindex="-1">解压文件 <a class="header-anchor" href="#解压文件" aria-hidden="true">#</a></h2><p>-x 提取/解压 extract -z 解压.gz .gzip -v 显示细节。没啥用，不用拼 -f 最后一个名字，接file名 一定要</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">.tar.gz 和 </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">.tgz使用tar -xzf </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">file</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">.tar  使用 tar -xvf </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">file</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">    //万能解压</span></span>
<span class="line"></span></code></pre></div><h2 id="环境变量" tabindex="-1">环境变量 <a class="header-anchor" href="#环境变量" aria-hidden="true">#</a></h2><p>正常来说，像node，如果要使用可执行脚本，需要到指定目录，很不方便，所以需要让计算机在任何目录都能识别我们得脚本。 将可执行脚本得所在目录配置到全局PATH中，这样在任何地址执行都可以。 实际到处得PATH就是一个字符串，用:分割 例如:PATH=/opt/nginx/bin:/opt/nginx/git/bin 这样就可以使用nginx 和 git了,如果有更多得就继续拼接 实际环境变量，需要配置到/etc/profile文件中。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> PATH</span><span style="color:#89DDFF;">=</span><span style="color:#FFCB6B;">$PATH</span><span style="color:#89DDFF;">:/</span><span style="color:#A6ACCD;">opt</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">nginx</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">bin</span></span>
<span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> PATH</span><span style="color:#89DDFF;">=</span><span style="color:#FFCB6B;">$PATH</span><span style="color:#89DDFF;">:/</span><span style="color:#A6ACCD;">opt</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">git</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">bin</span></span>
<span class="line"></span></code></pre></div><p><strong>写法上，$PATH代表引用了已有得完整PATH，然后不断使用:/...拼接即可，最后实际上只导出了一个完整得，拼接好得所有目录得PATH变量字符串</strong></p><p><strong>出现得问题</strong> /usr/libexec/grepconf.sh: line 5: grep: command not found</p><p>刷一下，然后再更新配置</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> PATH</span><span style="color:#89DDFF;">=</span><span style="color:#FFCB6B;">$PATH</span><span style="color:#89DDFF;">:/</span><span style="color:#A6ACCD;">usr</span><span style="color:#89DDFF;">/</span><span style="color:#FFCB6B;">bin</span><span style="color:#89DDFF;">:/</span><span style="color:#A6ACCD;">usr</span><span style="color:#89DDFF;">/</span><span style="color:#FFCB6B;">sbin</span><span style="color:#89DDFF;">:/</span><span style="color:#FFCB6B;">bin</span><span style="color:#89DDFF;">:/</span><span style="color:#A6ACCD;">sbin</span></span>
<span class="line"><span style="color:#A6ACCD;">source </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">etc</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">profile</span></span>
<span class="line"></span></code></pre></div><h2 id="查找目录" tabindex="-1">查找目录 <a class="header-anchor" href="#查找目录" aria-hidden="true">#</a></h2><p>find 范围 -name 文件夹名 -d</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">find </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">name vue3 </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">d   从</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">根目录下，查看vue3得目录名称</span></span>
<span class="line"></span></code></pre></div><h2 id="软件加压编译安装" tabindex="-1">软件加压编译安装 <a class="header-anchor" href="#软件加压编译安装" aria-hidden="true">#</a></h2><div class="language-JS"><button title="Copy Code" class="copy"></button><span class="lang">JS</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"># cd到源码目录，执行解压后得前缀目录</span></span>
<span class="line"><span style="color:#89DDFF;">./</span><span style="color:#A6ACCD;">configure </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">prefix</span><span style="color:#89DDFF;">=/</span><span style="color:#A6ACCD;">opt</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">nginx</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">nginx</span></span>
<span class="line"><span style="color:#A6ACCD;">make </span></span>
<span class="line"><span style="color:#A6ACCD;">make install</span></span>
<span class="line"></span></code></pre></div>`,15),o=[e];function t(c,r,i,D,C,y){return n(),a("div",null,o)}const d=s(p,[["render",t]]);export{F as __pageData,d as default};
