import{_ as p,v as e,b as t,R as o}from"./chunks/framework.caa0fbaf.js";const x=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"book/exp.md","filePath":"book/exp.md"}'),s={name:"book/exp.md"},a=o("<p>权限：RBAC模型</p><p>基础版本: 人员-》组织机构（部门） 1对1 人员-》角色 多对多 角色-》权限（菜单） 多对多</p><p>若依： 多了一个岗位。岗位只是一个人员的标签。 人员-》岗位 多对多</p><p>jas-cloud: 人员-》组织机构（部门） 多对多 eg：人员：既可以是分公司，也可以是项目部门。 组织机构（部门）-》权限（菜单） 多对多 人员-》角色 多对多 角色-》权限（菜单） 多对多 人员-&gt;岗位 岗位-》权限（菜单） 多对多</p><p>最终登录人员 权限-》根据组织机构+角色+岗位 合并-》计算最终人员权限</p><p>低代码，设计自定义表单-》（千人千面）生成菜单（多套）-》最终计算使用时只有一套菜单</p><p>------功能权限--------- 目录（1）-》页面（2）-》按钮（3） TIP：个人理解：页面权限至少包括一个查看列表与查看数据详情。所以 页面权限=拥有了查看功能。权限如果是联动的tree，则需要额外给一个查看数据的按钮比较好。</p><p>------数据权限---------</p><ol><li>数据范围：可以从 本人/本部门/本部门以下/自定义组织机构 定义，核心就是设置内置查询字段。</li><li>设置查询范围权限：设定内置查询条件。</li><li>管理数据：限定哪些数据可以被修改，被删除。（需要后端接口配合）</li></ol><p>------字段权限（是否可见）--------- 详情（ 表格列表展示字段继承详情同时也被视图控制），修改，新增。</p><p>------页面中还有视图概念（数据展示的全部为视图，表格，树表格，左树右表格，画廊，卡片）-------- 视图：基于表单全量数据。 1.做固定条件筛选，排序，列表字段显示精简。 2.做额外自定义按钮功能扩展（表格列表顶部，表格行内，数据详情页面）。 3.表格样式（对于符合条件的行记录，做整行级别或字段级别样式调整。（设计函数参与，由后端制作查询数据时，制作完成））。</p>",11),i=[a];function r(n,l,_,c,d,f){return e(),t("div",null,i)}const h=p(s,[["render",r]]);export{x as __pageData,h as default};
